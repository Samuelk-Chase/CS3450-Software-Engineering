name: Deploy Application

on:
  push:
    branches:
      - main  # Trigger deployment on push to main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js (for React)
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '24'

      # Step 3: Install dependencies and build React app
      - name: Install React dependencies and build
        run: |
          cd last-game-frontend
          npm install
          npm run build

      # Step 4: Set up Go (for the Go backend)
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'

      # Step 5: Build Go backend
      - name: Build Go backend
        run: |
          cd backend
          go build -o last-game-backend cmd/api/main.go

      # Step 6: Set up SSH agent with key from secrets
      - name: Set up SSH agent
        run: |
          mkdir -p ~/.ssh
          eval $(ssh-agent -s)  # Start the SSH agent
          echo "$PRIVATE_KEY" | ssh-add -  # Add the private key to the agent

          # Optionally, add EC2 instance to known hosts to prevent SSH warnings
          ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts

      # Step 7: Deploy to server
      - name: Deploy to server
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        run: |
          # Copy React build to the server
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 -r last-game-frontend/dist $SERVER_USER@$SERVER_IP:/var/www/html

          # Copy Go binary to the server
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 backend/last-game-backend $SERVER_USER@$SERVER_IP:/home/$SERVER_USER/

          # Restart Go backend service
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 $SERVER_USER@$SERVER_IP 'sudo systemctl restart last-game-backend'
